import { getURL } from "@/utils/helpers";
import { findFeedMedia, updateFeedWithXml } from "@/utils/supabase/admin";
import { createClient } from "@/utils/supabase/server";
import { Podcast } from "podcast";
import { cache } from "react";

const loadRss = cache(async (feed_uuid: string) => {
  console.info(feed_uuid)
  const supabase = await createClient();

  const { data: feed, error } = await supabase
    .from('feeds')
    .select('*').eq('uuid', feed_uuid)
    .single();

  if (error) {
    console.log(error);
    return new Response(null, {status: 404});
  }

  if(!feed) {
    console.info('no feed found')
    return new Response(null, {status: 404});
  }

  if(feed.rss) {
    const header = new Headers({
      "Content-Type": "text/xml",
    });
    return new Response(feed.rss, {headers: header});
  }
  const medias = await findFeedMedia(feed.uuid);
  const hostUrl = getURL();
  const feedUrl = getURL('feed.xml');

  // IMPORTANT! Apple Podcast requirement reference: https://help.apple.com/itc/podcasts_connect/#/itcb54353390
  const pod = new Podcast({
      title: feed?.title || '',
      description: feed?.description || '',
      feedUrl: feedUrl,
      imageUrl: feed?.cover || '',
      siteUrl: hostUrl,
      author: feed.author || '',
      language: 'en',
      // explicit: false,
      itunesAuthor: 'poddiy',
      itunesSubtitle: 'generated by poddify',
      itunesSummary: feed?.description || '',
      itunesOwner: { name: 'https://poddiy.io', email: 'hi@poddiy.io' },
      itunesExplicit: false,
      itunesCategory: [{
          text: 'Fiction',
      }],
      itunesImage: feed?.cover || 'https://pub-864077fe49bd4dcc9c269108cb2dbbe3.r2.dev/itunes-default-thumbnail.png',
      customNamespaces: {},
      customElements: []
  })
  medias.forEach(i => {
    if(i.url) {
      pod.addItem({
        title: i?.title || '',
        description: i?.description || '',
        url: `https://www.youtube.com/watch?v=${i.guid}` || '',
        guid: i?.guid || '',
        date: i?.created_at || '',
        author: i?.author || '',
        enclosure: {
            url: i.url,
            type: 'audio/x-m4a'
        },
        itunesImage: i?.cover || 'https://pub-864077fe49bd4dcc9c269108cb2dbbe3.r2.dev/itunes-default-thumbnail.png',
        itunesTitle: i?.title || '',
        itunesAuthor: i?.author || 'Max Nowack',
        itunesExplicit: false,
        itunesSubtitle: 'I am a sub title',
        itunesSummary: i?.description || 'I am a summary',
        itunesDuration: i.duration_in_sec,
        itunesEpisode: i.position+1  // Where episode is a non-zero integer (1, 2, 3, etc.) representing your episode number.
        // itunesNewFeedUrl: 'https://newlocation.com/example.rss',  // https://help.apple.com/itc/podcasts_connect/#/itcb54353390
      });
    }
  });
  feed.rss = pod.buildXml();
  await updateFeedWithXml(feed_uuid, feed.rss);
  console.log('save rss ok')
  // Response.send(feed.rss.rss);
  const header = new Headers({
    "Content-Type": "text/xml",
  });
  return new Response(feed.rss, {headers: header});

})
export async function GET(request: Request,{ params }: { params: { id: string } }) {

  return loadRss(params.id);
}